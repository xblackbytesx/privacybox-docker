version: '3.3'

networks:
  proxy:
    external: 
      name: proxy
  internal:
    internal: true

services:

  ampache-db:
    container_name: "ampache-db"
    image: "mariadb"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${STORAGE_ROOT}/docker/ampache/database/:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=false"
    networks:
      - internal
    environment:
      - DB_ROOT_PASSWORD=${DB_ROOT_PASS}
      - MYSQL_PASSWORD=${DB_USER_PASS}
      - MYSQL_DATABASE=ampache
      - MYSQL_USER=ampache
    restart: unless-stopped

  ampache-app:
    container_name: "ampache-app"
    image: "ampache/ampache:latest"
    security_opt:
      - no-new-privileges:true
    depends_on:
      - ampache-db
    volumes:
      # - ./path/to/media/files:/media:ro
      - ${STORAGE_ROOT}/docker/ampache/database/:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ampache-app.entrypoints=http"
      - "traefik.http.routers.ampache-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.ampache-app.middlewares=https-redirect@file"
      - "traefik.http.routers.ampache-app-secure.entrypoints=https"
      - "traefik.http.routers.ampache-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.ampache-app-secure.tls=true"
      - "traefik.http.routers.ampache-app-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.ampache-app-secure.service=ampache-app"
      - "traefik.http.services.ampache-app.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - internal
    restart: unless-stopped

volumes:
  ampache:
  ampache-db:
