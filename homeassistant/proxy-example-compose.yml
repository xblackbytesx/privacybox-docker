version: '3'

Only required when not running in host mode
networks:
  proxy:
    external: 
      name: proxy
  internal:
    internal: true
      
volumes:
  ha-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/homeassistant/config

  ha-mariadb:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/homeassistant/database      

  ha-zigbee2mqtt-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/homeassistant/zigbee2mqtt/data

  ha-mosquitto-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/homeassistant/mosquitto/config

  ha-mosquitto-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/homeassistant/mosquitto/data

services:
  ha-app:
    container_name: ha-app
    image: homeassistant/home-assistant:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=Europe/Amsterdam
    devices:
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyRFXCOM:/dev/ttyRFXCOM 
    volumes:
      - ha-config:/config
      - /sys/class/thermal:/sys/class/thermal
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ha-app.entrypoints=http"
      - "traefik.http.routers.ha-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.ha-app.middlewares=https-redirect@file"
      - "traefik.http.routers.ha-app-secure.entrypoints=https"
      - "traefik.http.routers.ha-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.ha-app-secure.tls=true"
      - "traefik.http.routers.ha-app-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.ha-app-secure.service=ha-app"
      - "traefik.http.services.ha.loadbalancer.server.port=8123"
      - "traefik.docker.network=proxy"
    networks:
      - internal
      - proxy
    depends_on:
      - ha-mariadb
      - ha-mqtt
      - ha-zigbee2mqtt
    restart: unless-stopped

  ha-mqtt:
    container_name: ha-mqtt
    image: eclipse-mosquitto:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - ha-mosquitto-config:/mosquitto/config
      - ha-mosquitto-data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    ports:
      - "1883:1883"
    environment:
      - TZ=Europe/Amsterdam
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

  # # Optional if working with a ZigBee adapter
  # ha-zigbee2mqtt:
  #   container_name: ha-zigbee2mqtt
  #   image: koenkk/zigbee2mqtt:latest
  #   security_opt:
  #     - no-new-privileges:true
  #   depends_on:
  #     - ha-mqtt
  #   environment:
  #     - TZ=Europe/Amsterdam
  #   volumes:
  #     - ha-zigbee2mqtt-data:/app/data
  #     - /run/udev:/run/udev:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   networks:
  #     - internal
  #   devices:
  #     - /dev/ttyZigbeeUSB:/dev/ttyZigbeeUSB
  #   labels:
  #     - "traefik.enable=false"
  #   privileged: true
  #   restart: unless-stopped

  ha-mariadb:
    container_name: ha-mariadb
    image: mariadb:latest
    security_opt:
      - no-new-privileges:true
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
      - TZ=Europe/Amsterdam
    volumes:
      - ha-mariadb:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
    ports:
      - "3306:3306"
    labels:
      - "traefik.enable=false"
    restart: unless-stopped