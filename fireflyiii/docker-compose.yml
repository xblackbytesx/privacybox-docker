version: "3.3"

networks:
  proxy:
    external:
      name: proxy
  internal:
    internal: true

volumes:
  fireflyiii-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/fireflyiii/database
  fireflyiii-export:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/fireflyiii/export
  fireflyiii-upload:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/fireflyiii/upload

services:
  fireflyiii-db:
    container_name: "fireflyiii-db"
    image: "postgres:10-alpine"
    security_opt:
      - no-new-privileges:true
    environment:
      - POSTGRES_USER=firefly
      - POSTGRES_PASSWORD=secret_firefly_password
    volumes:
      - fireflyiii-database:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  fireflyiii-app:
    container_name: fireflyiii-app
    image: jc5x/firefly-iii:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - fireflyiii-export:/var/www/firefly-iii/storage/export
      - fireflyiii-upload:/var/www/firefly-iii/storage/upload
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fireflyiii-app.entrypoints=http"
      - "traefik.http.routers.fireflyiii-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.fireflyiii-app.middlewares=secured@file"
      - "traefik.http.routers.fireflyiii-app-secure.entrypoints=https"
      - "traefik.http.routers.fireflyiii-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.fireflyiii-app-secure.tls=true"
      - "traefik.http.routers.fireflyiii-app-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.fireflyiii-app-secure.service=fireflyiii-app"
      - "traefik.http.services.fireflyiii-app.loadbalancer.server.port=80"
    env_file: .env
    depends_on:
      - fireflyiii-db
    restart: unless-stopped