version: '3'

networks:
  proxy:
    external: 
      name: proxy
  internal:
    internal: true

volumes:
  mastodon-database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_ROOT}/docker/mastodon/database

services:
  mastodon-db:
    container_name: mastodon-db
    image: postgres:10-alpine
    security_opt:
      - no-new-privileges:true
    shm_size: 256mb
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - mastodon-database:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
    restart: unless-stopped

  mastodon-redis:
    container_name: "mastodon-redis"
    image: "redis:alpine"
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data
    restart: unless-stopped

  # mastodon-es:
  #   restart: always
  #   image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "cluster.name=es-mastodon"
  #     - "discovery.type=single-node"
  #     - "bootstrap.memory_lock=true"
  #   networks:
  #     - internal
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #   volumes:
  #     - ./elasticsearch:/usr/share/elasticsearch/data
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1

  mastodon-app:
    container_name: mastodon-app
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - proxy
      - internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon.entrypoints=http"
      - "traefik.http.routers.mastodon.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon.middlewares=https-redirect@file"
      - "traefik.http.routers.mastodon-secure.entrypoints=https"
      - "traefik.http.routers.mastodon-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-secure.tls=true"
      - "traefik.http.routers.mastodon-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.mastodon-secure.service=mastodon"
      - "traefik.http.services.mastodon.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    depends_on:
      - mastodon-db
      - mastodon-redis
      # - mastodon-es
    volumes:
      - ./public/system:/mastodon/public/system
    restart: unless-stopped

  mastodon-streaming:
    container_name: mastodon-streaming
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: node ./streaming
    networks:
      - proxy
      - internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - mastodon-db
      - mastodon-redis
    restart: unless-stopped

  mastodon-sidekiq:
    container_name: mastodon-sidekiq
    image: tootsuite/mastodon
    security_opt:
      - no-new-privileges:true
    command: bundle exec sidekiq
    depends_on:
      - mastodon-db
      - mastodon-redis
    networks:
      - proxy
      - internal
    volumes:
      - ./public/system:/mastodon/public/system
    restart: unless-stopped

  # # Uncomment to enable federation with tor instances along with adding the following ENV variables
  # # http_proxy=http://privoxy:8118
  # # ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
  # mastodon-tor:
  #   image: sirboops/tor
  #   networks:
  #     - proxy
  #     - internal

  # mastodon-privoxy:
  #   image: sirboops/privoxy
  #   volumes:
  #     - ./priv-config:/opt/config
  #   networks:
  #     - proxy
  #     - internal