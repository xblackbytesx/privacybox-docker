version: '3'

networks:
  proxy:
    external: 
      name: proxy
  internal:
    internal: true

services:

  mastodon-db:
    container_name: "mastodon-db"
    image: "postgres:10-alpine"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    shm_size: 256mb
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ${STORAGE_ROOT}/docker/mastodon/database:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  mastodon-redis:
    container_name: "mastodon-redis"
    image: "redis:alpine"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data
    labels:
      - "traefik.enable=false"

  # es:
  #   container_name: "mastodon-search"
  #   image: "docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3"
  #   security_opt:
  #     - no-new-privileges:true
  #   restart: unless-stopped
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   networks:
  #     - internal
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #   volumes:
  #     - ./elasticsearch:/usr/share/elasticsearch/data
  #   labels:
  #     - "traefik.enable=false"  

  web:
    container_name: "mastodon-app"
    image: "tootsuite/mastodon"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - proxy
      - internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon.entrypoints=http"
      - "traefik.http.routers.mastodon.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon.middlewares=https-redirect@file"
      - "traefik.http.routers.mastodon-secure.entrypoints=https"
      - "traefik.http.routers.mastodon-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.mastodon-secure.tls=true"
      - "traefik.http.routers.mastodon-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.mastodon-secure.service=mastodon"
      - "traefik.http.services.mastodon.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    # ports:
    #   - "127.0.0.1:3000:3000"
    depends_on:
      - mastodon-db
      - mastodon-redis
      # - es
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    container_name: "mastodon-streaming"
    image: "tootsuite/mastodon"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command: node ./streaming
    networks:
      - proxy
      - internal
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - mastodon-db
      - mastodon-redis
    labels:
      - "traefik.enable=false"

  sidekiq:
    container_name: "mastodon-sidekiq"
    image: "tootsuite/mastodon"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    command: bundle exec sidekiq
    depends_on:
      - mastodon-db
      - mastodon-redis
    networks:
      - proxy
      - internal
    volumes:
      - ./public/system:/mastodon/public/system
    labels:
      - "traefik.enable=false"
