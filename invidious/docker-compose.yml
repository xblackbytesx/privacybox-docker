version: '3.3'

networks:
  proxy:
    external: 
      name: proxy
  internal:
    internal: true

services:

  invidious-db:
    container_name: "invidious-db"
    image: "postgres:10-alpine"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${STORAGE_ROOT}/docker/invidious/database:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
    networks:
      - internal
    restart: unless-stopped


  # invidious-app:
  #   container_name: "invidious-app"
  #   image: "omarroth/invidious"
  #   security_opt:
  #     - no-new-privileges:true
  #   restart: unless-stopped
  #   environment:
  #     INVIDIOUS_CONFIG: |
  #       channel_threads: 1
  #       feed_threads: 1
  #       db:
  #         user: invidious
  #         password: secret
  #         host: invidious-db
  #         port: 5432
  #         dbname: invidious
  #       full_refresh: false
  #       https_only: true
  #       domain: https://beta-videos.dropdoos.nl
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.invidious-app.entrypoints=http"
  #     - "traefik.http.routers.invidious-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
  #     - "traefik.http.routers.invidious-app.middlewares=https-redirect@file"
  #     - "traefik.http.routers.invidious-app-secure.entrypoints=https"
  #     - "traefik.http.routers.invidious-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
  #     - "traefik.http.routers.invidious-app-secure.tls=true"
  #     - "traefik.http.routers.invidious-app-secure.tls.certresolver=le-dns"
  #     - "traefik.http.routers.invidious-app-secure.service=invidious-app"
  #     - "traefik.http.services.invidious-app.loadbalancer.server.port=3000"
  #     - "traefik.docker.network=proxy"
  #   networks:
  #     - proxy
  #     - internal
  #   depends_on:
  #     - invidious-db

  invidious-app:
    container_name: "invidious-app"
    image: "flourgaz/invidious"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${STORAGE_ROOT}/docker/invidious/config/config.yml:/invidious-app/config/config.yml
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.invidious-app.entrypoints=http"
      - "traefik.http.routers.invidious-app.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.invidious-app.middlewares=https-redirect@file"
      - "traefik.http.routers.invidious-app-secure.entrypoints=https"
      - "traefik.http.routers.invidious-app-secure.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.invidious-app-secure.tls=true"
      - "traefik.http.routers.invidious-app-secure.tls.certresolver=le-dns"
      - "traefik.http.routers.invidious-app-secure.service=invidious-app"
      - "traefik.http.services.invidious-app.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - internal
    depends_on:
      - invidious-db
    restart: unless-stopped

volumes: 
  postgresdata: 
    external: 
      name: invidious_postgresdata
